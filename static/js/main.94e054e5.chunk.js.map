{"version":3,"sources":["page/PageBreadcrumbs.js","page/PageCard.js","App.js","serviceWorker.js","index.js"],"names":["PageBreadcrumbs","Breadcrumb","Item","href","active","PageCard","Container","Row","Col","Card","style","width","height","Img","variant","src","Body","Title","Text","Button","App","lg","Alert","ButtonGroup","size","Badge","className","Image","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94e054e5.chunk.js","sourcesContent":["import React from 'react';\nimport {Breadcrumb} from 'react-bootstrap';\n\nfunction PageBreadcrumbs (){\n\treturn(\n\t\t<Breadcrumb>\n\t\t<Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\n\t\t<Breadcrumb.Item href=\"https://www.republika.co.id/\">Berita</Breadcrumb.Item>\n\t\t<Breadcrumb.Item active>Bola</Breadcrumb.Item>\n\t\t</Breadcrumb>\n\t\t)\n\t}\n\nexport default PageBreadcrumbs;","import React from 'react';\nimport {Card, Button,Container,Row,Col} from 'react-bootstrap';\n\nfunction PageCard(){\n\treturn(\n\t\t<div>\n\t\t<Container>\n\t\t<Row>\n\t\t<Col>\n\t\t<Card style={{ width: '15rem' , height: '36rem'}}>\n\t\t\t<Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/f7/ad/diego-godin-vs-thailand_l9viaa2o7afh19gjl6vnekbgq.jpg?t=-1214473334&w=1920&h=1362&quality=100\" />\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Diego Godin Ukir Rekor Spesial Lawan Thailand</Card.Title>\n\t\t\t\t<Card.Text>\n\t\t\t\tGodin sekarang menjadi pemain Uruguay dengan caps terbanyak setelah membantu negaranya melibas Thailand di final Piala Tiongkok. Diego Godin boleh berbangga setekah resmi menjadi.\n\t\t\t\t</Card.Text>\n\t\t\t\t<Button variant=\"primary\">Read More</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t\t</Col>\n\t\t<Col>\n\t\t<Card style={{ width: '15rem' , height: '36rem'}}>\n\t\t\t<Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/30/f0/neymar-psg-paris-saint-germain-2018-19_gmakk5891n9c19udcwofmrsgc.jpg?t=-1258742791&quality=60&w=1600/100px180\"/>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Neymar Bahas Kontrak Baru Di Paris Saint-German</Card.Title>\n\t\t\t\t<Card.Text>\n\t\t\t\tAyah sang pemain bintang Brasil berusaha meredam rumor ketertarikan Madrid. Neymar sedang berdiskusi dengan Paris Saint-Germain soal perpanjangan kontrak bersama kampiun ligue 1 Peranci, demikian kata ayahnya\n\t\t\t\t</Card.Text>\n\t\t\t\t<Button variant=\"primary\">Read More</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t\t</Col>\n\t\t<Col>\n\t\t<Card style={{ width: '15rem' , height: '36rem'}}>\n\t\t\t<Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/f3/33/england-celebrate-vs-montenegro_e97kv5anpqlq1gr9nc2qaz4ko.jpg?t=-1232521935&quality=60&w=1600/100px180\" />\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Inggris Mau Jadi Tim Terbaik Di Dunia</Card.Title>\n\t\t\t\t<Card.Text>\n\t\t\t\tKumpulan talenta terbaik yang dimiliki Inggris saat ini membuat Barkley sangant optimistis. Ross Berkley merasa Inggirs sudah berada di jalur yang benar untuk bisa menjadi tim terbaik di dunia dengan banyaknya talenta yang muncul sekarang ini.\n\t\t\t\t</Card.Text>\n\t\t\t\t<Button variant=\"primary\">Read More</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t\t</Col>\n\t\t<Col>\n\t\t<Card style={{ width: '15rem' , height: '36rem'}}>\n\t\t\t<Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/63/7f/sani-rizki-fauzi-indonesia-u-22_4yztc4nehkt61fa7omuyagf71.jpg?t=351764441&quality=60&w=1600/100px180\" />\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>Sani Rizki Fauzi Tegaskan Mental Pemain Timnas Indonesia U-23 Tetap Bagus</Card.Title>\n\t\t\t\t<Card.Text>\n\t\t\t\tGodinGelandang tim nasional (timnas) Indonesia U-23, Sani Rizki Fauzi, menegaskan kesiapannya untuk bermain pada laga melawan Brunei Darussalam U-23. Kedia tim akan bentrok pada laga pemungkas grup K.\n\t\t\t\t</Card.Text>\n\t\t\t\t<Button variant=\"primary\">Read More</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t\t</Col>\n\t\t</Row>\n\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default PageCard;","import React from 'react';\nimport './App.css';\nimport './css/bootstrap.min.css';\nimport {Container,Row, Col,Alert,Button, ButtonGroup, Badge, Image} from 'react-bootstrap';\nimport PageBreadcrumbs from './page/PageBreadcrumbs';\nimport PageCard from './page/PageCard';\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col lg=\"3\"><Alert variant=\"primary\">Website React Bootstrap</Alert></Col>\n          <Col> </Col>\n          <Col>\n            <ButtonGroup size=\"sm\">\n              <Button variant=\"primary\">Notification<Badge variant=\"light\"> 9 </Badge>\n                  <span className=\"sr-only\">unread messages</span>\n              </Button>\n              <Button variant=\"primary\">Message<Badge variant=\"light\"> 19 </Badge>\n                  <span className=\"sr-only\">unread messages</span>\n              </Button>\n            </ButtonGroup>\n          </Col>\n          <Col>\n            <Image src=\"https://banner2.kisspng.com/20180420/kuq/kisspng-computer-icons-user-clip-art-my-vector-5ad9a348cd2ce1.8035052415242125528404.jpg\" width=\"40\"/>\n            <Button variant=\"light\" size=\"md\">Tasya Sukma</Button>{' '}\n          </Col>\n        </Row>\n        <Row>\n          <Col></Col>\n          <Col><PageBreadcrumbs/></Col>\n        </Row>\n        <Row>\n          <Col><PageCard/></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}